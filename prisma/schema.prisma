// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Jwt {
  id            Int       @id @default(autoincrement())
  user_id       Int
  refresh_token String
  created_at    DateTime  @default(now())
  user          User      @relation(fields: [user_id], references: [id])
}

model Post {
  id          Int      @id @default(autoincrement())
  user_id     Int
  content     String   @db.Text
  img         String?
  created_at  DateTime @default(now())
  user        User     @relation(fields: [user_id], references: [id])
  likes       Like[]
  hastags     Hashtag[]
}

model Like {
  id         Int      @id @default(autoincrement())
  user_id    Int
  post_id    Int
  created_at DateTime @default(now())
  post      Post      @relation(fields: [post_id], references: [id])
  user      User      @relation(fields: [user_id], references: [id])
}

model Hashtag {
  id          Int       @id @default(autoincrement())
  post_id     Int
  hastag      String
  created_at  DateTime  @default(now())
  post        Post      @relation(fields: [post_id], references: [id])
}

model Follower {
  id          Int      @id @default(autoincrement())
  user_id     Int
  follower_id Int
  created_at  DateTime    @default(now())
  user        User        @relation("userId", fields: [user_id], references: [id])
  follower    User        @relation("followerId", fields: [follower_id], references: [id])
}

model User {
  id          Int                 @id @default(autoincrement())
  birthday    Int?                  
  photo       String?
  cover       String?
  username    String              @unique
  name        String
  bio         String?
  location    String?
  password    String
  created_at  DateTime            @default(now())
  chat_lists  chat_list[]
  group_chats user_group_chat[]
  chats       chat[]
  posts       Post[]
  followers   Follower[]            @relation("userId")
  followed    Follower[]            @relation("followerId")
  likes       Like[]
  jwt         Jwt[]
}

model user_group_chat {
  id          Int        @id @default(autoincrement())  
  user_id     Int
  group_id    Int
  created_at  DateTime   @default(now())
  user        User       @relation(fields: [user_id], references: [id])
  group       group_chat @relation(fields: [group_id], references: [id])
}

model group_chat {
  id            Int                 @id @default(autoincrement())
  name          String
  photo         String
  created_at    DateTime            @default(now())
  user_groups   user_group_chat[]
  chat_lists    chat_list[]
  chats         chat[]
}

model chat_list {
  id          Int           @id @default(autoincrement())
  group_id    Int           
  user_id     Int
  created_at  DateTime      @default(now())
  group       group_chat    @relation(fields: [group_id], references: [id])
  user        User          @relation(fields: [user_id], references: [id])
}

model chat {
  id          Int           @id @default(autoincrement())
  sender_id   Int
  group_id    Int
  is_read     Boolean       @default(false)
  content     String
  created_at  DateTime      @default(now())
  user        User          @relation(fields: [sender_id], references: [id])
  groups      group_chat    @relation(fields: [group_id], references: [id])
}
